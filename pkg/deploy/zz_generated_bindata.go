// Code generated by go-bindata.
// sources:
// manifests/coredns.yaml
// manifests/flagger.yaml
// manifests/gloo.yaml
// DO NOT EDIT!

package deploy

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _corednsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\xcd\x6e\x1b\x37\x10\xbe\xeb\x29\x88\x2d\x72\xeb\xca\x12\x8c\xa4\x2e\x6f\x89\xe4\x26\x06\x62\x45\xb0\xec\x5c\x8a\x22\xa0\xb8\x23\x89\x35\x97\xc3\x92\xb3\x8a\xd5\xd4\xef\x5e\x70\xff\x44\xca\xeb\x20\x09\xb2\x27\x2e\x87\xf3\xcd\x70\x7e\xbe\xa1\xb0\xea\x23\x38\xaf\xd0\x70\xb6\x9f\x8e\xee\x95\x29\x38\x5b\x81\xdb\x2b\x09\xaf\xa5\xc4\xca\xd0\xa8\x04\x12\x85\x20\xc1\x47\x8c\x19\x51\x02\x67\x12\x1d\x14\xc6\xb7\xff\xde\x0a\x09\x9c\xdd\x57\x6b\xc8\xfd\xc1\x13\x94\xa3\x3c\xcf\x47\x31\xb4\x5b\x0b\x39\x16\x15\xed\xd0\xa9\x7f\x05\x29\x34\xe3\xfb\x0b\x3f\x56\x78\xb6\x9f\xae\x81\x44\x67\x79\xa6\x2b\x4f\xe0\x6e\x50\x43\x62\x56\x8b\x35\x68\x1f\x56\xac\xb6\xe3\x0c\x10\xd4\xfa\x6b\x44\xf2\xe4\x84\xb5\xca\x6c\x1b\x43\x79\x01\x1b\x51\x69\xf2\xbd\xbf\x8d\x57\xbc\x73\xdb\x55\x1a\x3c\x1f\xe5\x4c\x58\xf5\xd6\x61\x65\x6b\xe4\x9c\x65\xd9\x88\x31\x07\x1e\x2b\x27\xa1\xdd\x03\x53\x58\x54\xa6\x06\xcb\x99\x6f\x22\xd3\xfc\x58\x2c\x9a\x45\x1f\x84\xf0\xbb\x07\xb7\x6e\x75\xb5\xf2\x54\x2f\x3e\x0b\x92\xbb\x6f\xb3\x67\xb0\x38\x85\xd9\x02\xfd\x8c\x80\xbe\x51\xa6\x50\x66\x9b\xc4\x55\x18\x83\x54\xab\xb7\xc1\x1d\xc2\x4d\xe2\x2d\x2a\xc2\xca\x16\x82\x80\xb3\x8c\x5c\x05\xd9\xcf\x4f\x0f\x6a\xb8\x81\x4d\xed\x5f\x1b\xb0\xaf\x5c\x78\xc4\xd8\xd3\xda\x79\x06\xd9\x57\xeb\xbf\x41\x52\x9d\xfb\xc1\x52\xff\xe1\x02\xef\x7b\x67\x86\x66\xa3\xb6\xd7\xc2\xfe\x48\xdb\x74\xc7\x67\xe8\x60\xa3\x34\x70\xf6\x5f\x1d\xd3\x31\x7f\x79\xce\xbe\xd4\xcb\xf0\x81\x73\xe8\x7c\xff\xbb\x03\xa1\x69\xd7\xff\x1e\x13\xc0\x5e\x7c\x99\xbd\xbf\x5b\xdd\x5e\xde\x7c\x9a\x7f\xb8\x7e\x7d\xb5\x78\x7c\xc1\x94\xc9\x45\x51\xb8\xb1\x70\x56\x30\x65\x5f\x35\x8b\x23\x36\xab\xcb\x9a\x29\xe3\x41\x56\x0e\xa2\xfd\xca\x7a\x72\x20\xca\x68\x6b\x23\xb4\xa6\x9d\xc3\x6a\xbb\x1b\x06\xee\xcf\x3e\x1e\xbd\x45\x4f\x9e\x9d\x01\xc9\xb3\x36\x1e\x67\x0b\x2c\xe0\x5d\xbd\x1d\xfb\xe1\x40\xa3\x28\xd8\xd4\x0f\x1b\x1c\x80\xb6\x0e\x4b\xa0\x1d\x54\x9e\xf1\xdf\xa7\x2f\xcf\x63\xc1\xc3\x81\x8d\x1b\xab\xa1\xe1\xf4\x7e\x2c\xd1\x6c\xfa\x03\x52\xc8\x1d\xb0\xf3\x49\xbf\xa1\x11\xed\x28\xf5\x24\x92\x89\x62\x2d\xb4\x30\xb2\x09\xcf\xe3\x93\x6a\x80\x07\x02\x13\x96\xfe\xa4\x1d\xe7\x60\x35\x1e\x4a\xf8\x31\x56\x3d\x69\xb4\x0b\x9f\x0b\x6b\xdb\x23\x8d\xe2\x69\xfb\x35\xc0\x59\xa8\xa7\xf9\x62\x95\x8d\xbc\x05\x19\xb4\x7f\x71\x60\xb5\x92\xc2\x73\x36\x1d\x31\x16\x3a\x94\x60\x7b\x68\x80\xe9\x60\x81\xb3\x1b\xd4\x5a\x99\xed\x5d\xdd\xeb\x0d\x37\xc4\x3b\xbc\x0d\x47\x29\x1e\xee\x8c\xd8\x0b\xa5\xc5\x3a\x14\x6c\x0d\x07\x1a\x24\xa1\x6b\xce\x94\x81\xfc\xde\x47\x8e\x0f\xbb\x4e\x50\x5a\xdd\x03\xc7\xd1\xa9\x63\x9e\xe8\x3f\x77\xf9\xee\x7a\xf5\x3a\xe9\xec\xc5\x49\x84\xeb\x7b\xa2\x06\x17\x93\x5f\xf8\x72\x76\x0f\x87\x10\x32\xa7\x48\x49\xa1\x5f\x17\x05\x1a\xff\xc1\xe8\x43\x16\xd5\x21\xda\xa0\x89\x8e\xb3\xec\xf2\x41\x79\xf2\x9d\x30\xd0\xf7\x2a\xb9\x7e\xf8\x42\x09\x9c\xf0\x28\x7a\xce\xb4\x32\xd5\x43\x7b\x48\xa2\x21\xa1\x0c\xb8\xde\x97\xfc\x49\x59\x34\x9f\x2a\xc5\xf6\xb8\xdd\x35\x11\x9f\x8e\xcf\xc7\x93\xf4\xd0\xb2\xd2\x7a\x89\x5a\xc9\x03\x67\x57\x9b\x05\xd2\xd2\x81\x87\x9a\xe6\xba\xc2\x8e\x66\x4f\x5f\xde\xaa\x54\x94\xec\x84\x74\x94\xe8\x0e\x9c\x4d\x7f\x9b\x5c\xab\xa4\x47\xff\xa9\xc0\x9f\x9e\x96\xb6\xe2\x6c\x3a\x99\x94\x83\x18\x09\x84\x70\x5b\xcf\xd9\x9f\x2c\xcb\x43\x3f\x66\xbf\xb2\x2c\x61\x86\x8e\x08\x33\xf6\x57\xaf\xb2\x47\x5d\x95\x70\x1d\xb2\x9a\xe4\xad\x8b\x56\xe0\xdf\xbc\x39\x14\xd9\x2f\xc3\xf9\xa5\xa0\x1d\x4f\xb8\x27\xb9\x8b\x28\x42\x9e\x39\x0b\x63\xed\xc8\x1d\xe8\x52\x3b\x7d\xa6\x96\xe8\x88\xb3\x88\x66\xba\x46\x4e\x71\xad\x43\x42\x89\x9a\xb3\xbb\xf9\xf2\x7b\x71\x72\x92\x76\x10\xeb\x76\xf6\x15\xac\x84\xfc\x3a\xb4\x12\xc8\x29\x39\xec\x59\x8c\x56\x13\xbf\xa2\xc3\x0c\x0d\xc1\x03\xc5\xa9\x15\x5a\xe3\xe7\xa5\x53\x7b\xa5\x61\x0b\x97\x5e\x0a\x5d\xf7\x0f\x0f\xc4\xec\xe3\x70\x4b\x61\xc5\x5a\x69\x45\x0a\x4e\x8a\x43\x14\x45\xba\x91\xb3\xc5\xe5\xed\xa7\x37\x57\x8b\xf9\xa7\xd5\xe5\xcd\xc7\xab\xd9\x65\x22\x2e\x1c\xda\x53\x05\xa1\xf5\x40\xe2\x6e\x10\xe9\x0f\xa5\xa1\x1d\xfa\x69\x1a\xb5\xda\x83\x01\xef\x97\x0e\xd7\x10\xe3\xed\x88\xec\x5b\xa0\xd4\x84\x6d\x0a\xe5\x64\xb2\xb2\xb6\x1c\x38\xbb\x98\x5c\x4c\x92\x6d\x2f\x77\x10\x82\xfc\xee\xf6\x76\x19\x09\x94\x51\xa4\x84\x9e\x83\x16\x87\x15\x48\x34\x85\xe7\xec\x55\xac\x4a\xaa\x04\xac\xa8\x17\xbe\x8c\x64\xbe\x92\x12\xbc\xbf\xdd\x39\xf0\x3b\xd4\x45\xc3\xae\xdd\xb7\x11\x4a\x57\x0e\x22\x69\xa7\x5b\x18\xdf\xb5\xfd\xbc\x79\x6b\xb5\x82\xa6\x2b\xbe\xa3\x6b\x64\xf7\x9a\x49\xc3\x33\x4c\x4c\xf5\x85\x09\x4a\x7f\x9a\xae\x9a\x51\xbb\x56\x4e\x64\x5d\xa4\x07\x85\xad\x62\xff\x3a\x18\xd4\x3c\x4a\x9f\x7d\x92\xb5\x6f\xbc\x81\x89\x1b\x0d\x8f\x67\x47\xee\x93\x27\xf2\xf1\x95\x11\x78\xbc\xa9\x87\x2c\x74\x5c\x36\x20\xf6\xd2\x09\xfb\xec\x53\xf9\x1b\x26\xb8\x6c\x5e\xb5\x79\x3b\xce\x22\xa4\x6f\x9d\xf5\xe9\x34\x1e\xb2\xd9\xda\xb8\x5a\xf2\xf8\xc5\xb8\x58\x3d\xbe\x18\x45\xfc\x97\x9f\xb0\x9b\x8d\x69\xeb\x94\xe4\xf2\x01\x0a\x7b\x46\xa1\xe1\x9e\x7c\x80\xa5\x6c\x4a\x66\xa9\xca\xff\x01\x00\x00\xff\xff\x51\xb6\xd2\x56\xba\x0e\x00\x00")

func corednsYamlBytes() ([]byte, error) {
	return bindataRead(
		_corednsYaml,
		"coredns.yaml",
	)
}

func corednsYaml() (*asset, error) {
	bytes, err := corednsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "coredns.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _flaggerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3b\x5b\x73\xdb\x36\xb3\xef\xfa\x15\x98\xb6\x33\x76\x9a\x43\xca\xca\xa5\x4d\xd8\xc9\x74\x7c\x92\xb6\x93\x33\x4d\xea\x89\xd3\xf6\xa1\x27\xd5\x40\xe0\x4a\x42\x0d\x02\x08\x00\xca\x56\x8f\xcf\x7f\xff\x06\x17\xde\x49\x89\x72\x9c\x7e\x5f\x2e\x7c\x91\xb8\x00\x76\x17\x7b\xc3\x62\x01\x62\x49\x7f\x03\xa5\xa9\xe0\x09\xc2\x92\xc2\x95\x01\x6e\xdf\x74\x7c\xf1\x48\xc7\x54\x4c\x37\xb3\x05\x18\x3c\x9b\x5c\x50\x9e\x26\xe8\x69\xae\x8d\xc8\x5e\x81\x16\xb9\x22\xf0\x0c\x96\x94\x53\x43\x05\x9f\x64\x60\x70\x8a\x0d\x4e\x26\x08\x61\xce\x85\xc1\x16\xac\xed\x2b\x42\x6b\x60\x59\xac\xd7\x53\x15\xc6\x45\x52\x30\x4a\xb6\x09\xba\x00\x90\x13\x84\x18\x5e\x00\x0b\x7d\xb1\x94\xf1\x45\xbe\x00\xc5\xc1\x80\xe3\x80\x72\x6d\x30\x27\x90\xa0\x25\xc3\xab\x15\xa8\x81\x7e\x19\xe6\x78\x05\x69\xb4\xd8\x26\xe8\x35\x65\x6c\xb0\x23\xc7\x59\x0b\x59\xc1\x20\x59\x63\x65\xca\xa6\xe8\x24\x9e\x7d\x13\x9f\x4c\x10\xf2\x23\x08\xe6\x58\x51\xd0\x71\x68\x8f\xb1\x94\x13\x2d\x81\xb8\x49\xa7\xa9\x93\x04\x66\x67\x8a\x72\x03\xea\xa9\x60\x79\xe6\x25\x10\xa1\xff\x39\xff\xe5\xe5\x19\x36\xeb\x04\xc5\xda\x60\x93\xeb\x58\xae\xb1\x06\x47\xdc\x23\x3f\x77\x60\x07\x30\x5b\x09\x09\xd2\x46\x51\xbe\x1a\x18\xed\x58\xd9\xfe\x0e\x74\xb5\x36\x35\x24\x35\xc0\x08\x24\x0c\x6b\xf3\x5a\x61\xae\x1d\xe3\xaf\x69\x56\xe7\xe7\xe7\xfe\xc6\x16\xda\x95\x12\xb9\x2c\x05\xe6\x04\xe2\x11\x04\x6d\x12\x6c\x60\x25\xac\xd0\xfc\x7b\x84\x30\x63\xee\x5f\xb0\x27\x37\x0f\x07\x90\x2c\x57\x98\x55\x52\x76\x40\x4d\xf9\x2a\x67\x58\x05\xb0\xed\xa9\x89\xb0\x2c\xbc\xb4\x44\x24\x26\x90\x4e\x10\xda\x60\x46\x53\x67\x71\x9e\x8c\x90\xc0\x4f\xcf\x9e\xff\x76\xff\x9c\xac\x21\xc3\x1e\x88\x90\x54\x42\x82\x32\x25\x37\x8e\x42\xd0\x5f\xf1\xf4\xf5\x71\x66\x94\x1b\xa1\x09\x66\xa0\x5e\xc1\xb2\xd9\x64\x2d\x7e\xfb\x4b\x07\x18\xb5\x85\xd5\xd7\x28\x16\x7f\x01\x31\xad\xc6\x21\x1e\xbc\x39\x97\x0e\xdb\x69\xeb\xa8\xa7\xf9\x38\x91\x1f\x3a\xc8\x59\xc3\x61\x83\x14\xbc\xcd\xa9\x82\x0e\xad\xa8\xc6\x7c\xa7\xc9\x32\xd7\x01\x5a\xe2\x0d\xa0\xb7\x82\x53\x8e\xd9\x56\xd3\x8e\x74\x76\xc9\xcd\xf9\xe4\x06\xb3\xbe\xb9\x48\x6c\x0c\x28\x9e\xa0\x3f\xff\x38\x89\x1e\xbf\xb9\x7b\x9c\x5d\xeb\x3b\x87\x0a\x8a\x1a\x50\xf5\xa0\xd7\x37\x94\xe7\xd9\x22\x84\x9c\xfa\x93\xe1\x2b\xef\xb9\x87\x8f\x04\xa3\x28\xe9\xa5\xb8\x4b\x18\x81\xdf\x6c\xa0\x69\xff\x60\xb4\x47\xa2\x25\x9e\x91\x92\x2d\x9e\x9d\x12\x2e\x9e\x21\x93\x3c\x08\xc9\xdb\x1c\xd4\xf6\x9d\xb1\x98\xb5\x02\xbd\x16\xac\xd7\xaf\x9a\x98\x06\x34\xe8\x9f\x21\x97\x29\x9e\x1e\x57\xa8\x37\x96\x6c\x0c\xf4\xd8\x11\x6b\xaa\x66\xac\x14\xde\x76\x5a\xb5\x01\x79\x43\xe3\xdc\x29\x9c\x9d\x23\x2f\x61\xb1\x16\xe2\xe2\xdf\x63\xd7\xb7\x62\x5e\x86\x66\x20\xf2\x5e\x99\x95\xbc\xbc\x0f\xdf\x70\x9d\x76\x20\x01\x9e\x67\xbb\xda\x23\xf4\xc5\x17\x3b\x9b\xa5\x82\x48\x09\xc6\x44\xde\x67\x49\x55\xbf\x31\x7d\xa4\xd0\x66\x04\xb2\x51\x13\xcf\xd5\xce\x40\xb4\x14\x2a\xc3\x26\xb1\xdd\xde\x8d\xd2\x3b\x7a\xea\x30\xfd\xa8\xb0\x99\xdb\xf5\x61\xca\x57\x0a\xb4\xfe\x9c\xb4\xec\x19\xf4\x1e\x93\x16\xa9\x84\xd3\xc1\x33\xc0\x29\xa3\x1c\xce\x81\x08\x9e\x76\xc4\x34\x18\x11\xa5\x12\x1b\x9a\x82\xea\x1f\xd0\x33\x1b\x0d\x6a\x43\x49\x47\x02\xbb\x34\x94\x81\x5e\xbf\x3c\x5c\x6a\x08\x49\xa1\x0e\x5f\x19\xec\xa0\x67\x54\x13\xb1\x19\x58\x84\xfd\xe8\x85\x10\x0c\x70\x5b\xec\x7e\xf8\x8d\x98\xdd\x11\x95\x6f\x64\x1a\x96\x91\x5e\xa5\xf4\x78\x88\xbe\xa0\x72\x28\x71\x1d\x9e\xae\xc1\x6a\x05\xa6\xc7\x7b\x3f\xbb\x5b\x00\xf6\x84\xdb\x01\x1d\xf4\xd1\x8c\x2a\x09\x37\xa0\xc1\x85\x1a\xb0\xe6\xe6\xa3\xda\x41\xba\xdd\xf4\x98\x3d\x64\x7d\xd7\x3e\xda\xfb\x97\x98\x32\x48\x9f\xae\x81\x74\xf3\xa1\xc1\x41\xc3\x9b\x91\xc1\x21\x0c\x6b\x73\x2a\x25\xa3\x90\x9e\xb7\xf6\xc4\x68\x97\x2e\xbb\x55\x84\xd1\x43\x5d\x0d\xa4\xdd\xbb\x2f\x43\xe9\xc9\x4a\x22\xf4\x9c\x53\x43\x31\xa3\x7f\x43\xd7\x28\xce\x42\xc8\xed\x5b\xc3\xce\x73\x42\x00\xd2\x9e\x51\x3f\x3a\x51\xef\xe6\x7e\x53\x54\xcb\x36\x33\xcc\xe4\x1a\xdf\xaf\x60\xa1\xd6\xe3\xeb\x27\xb5\x66\x1f\x90\x21\x4d\x90\x51\xb9\x37\x29\x6d\x84\xc2\x2b\x28\x21\xad\x51\xf7\xf6\x8c\x5a\x62\xa6\x7b\x86\xcd\x46\x0d\x8b\xa2\x68\x52\x2f\xfb\x6d\x8a\xe2\xde\xb9\xb7\xf9\x53\x42\x44\xce\x4d\xa3\xa4\xf7\x81\x54\xe8\x0a\xb0\x54\x22\x03\xb3\x06\x57\x50\xe3\x45\xa5\x28\x41\x2b\x26\x44\xa4\xb7\xda\x40\xf6\x09\x88\xa1\x33\x45\xb5\xc0\x24\xc6\xb9\x59\x0b\x45\xff\x76\xe1\x61\xa0\xca\xcb\x72\x6d\x40\xbd\x12\x0c\x3e\xe4\xe9\xab\x9c\xd9\x08\xec\x96\x94\x9f\x94\xc8\x65\x70\x50\x17\x4b\x8a\x5a\x74\x80\xc1\x06\xb8\xd1\xee\x2f\x11\x7c\x49\x57\x19\x96\xfe\x55\x03\x51\x60\x8a\xff\xce\x34\xb4\xf7\xf9\x45\x18\x7b\xf4\xf5\x51\x97\x08\x96\x6e\x7c\x8b\x4c\x0a\x92\x89\x6d\x16\x68\xed\xc5\x11\x6a\x8e\x3e\xf2\xb4\x50\x39\x25\x0a\x6e\x30\x93\x22\xad\xaa\x93\x63\xf0\x56\x55\xfe\x2e\xda\xb0\x5f\x00\xdd\x7c\x9b\xea\xa2\x3e\xbd\x0f\x79\xb3\x16\xdc\xc2\x5e\x2b\xee\x56\x2f\xe3\x71\x73\x30\x97\x42\x5d\x50\xbe\x8a\xa9\x36\x54\xc4\x54\x74\x69\x6c\xa8\x32\xb9\x8d\x74\xa5\xae\x3a\xb0\x8a\xa2\x55\x89\x36\x94\x3b\x6f\x70\x06\xd3\x0b\x1c\xcf\x22\x96\xd2\xe6\xd2\xce\xb1\xf0\x65\x8f\x80\x6d\x6b\xa0\xe2\xff\xd6\x99\x09\x7c\x72\x91\x42\x17\xd0\xd3\x71\xdc\x24\xf7\xf1\xac\x25\xa3\x26\xd6\x19\x8d\xb4\x04\xd2\x2b\x54\xa3\xf0\x72\x49\x89\xeb\x39\x06\xa5\x8d\xb4\xb1\x16\xac\x5f\x45\x1a\x8c\xa1\x7c\xe5\xd9\xce\xa5\x36\x0a\x70\xd6\x7c\x73\x27\x0b\x1e\x24\x95\xb8\xa2\xfd\x73\x1c\xc3\x09\x36\x70\x89\xb7\xc3\xcc\xf4\x89\x32\x0c\xea\xc5\xcf\x05\x2f\x0e\xc0\x7e\x7d\xf5\x73\x68\x9a\x6e\xca\x9c\xb5\x36\x60\x05\xe6\x13\x0f\xc2\xf5\xa5\xf8\x90\x78\x5c\x79\x40\x43\x2f\xc0\x53\x29\x68\x11\xa9\xa5\x48\x75\xd5\x7b\x6a\xed\x64\xdb\x55\x80\xfd\x65\x54\xfb\x3f\x97\xd8\x90\xf5\x38\x16\x1a\xeb\x40\x5b\xa9\x03\x56\x10\xea\xf1\xef\xc5\x0a\xfe\x9b\xf2\xd4\xae\x04\x1f\xae\x31\x4c\x94\x60\x10\xf6\xb2\x85\x02\x76\x88\x62\x52\x9e\x12\xd6\x5c\xa1\x8d\x52\xe7\x6e\x9b\xe7\xec\xaa\x37\x7f\x6b\x0f\x18\x9d\x10\x7e\x92\x2a\x6a\xf8\xeb\xad\x6b\xab\x8e\xfd\x50\xc5\xdd\x34\xa9\x2f\xf4\xd0\x45\x53\xfb\x1b\x6f\x33\x96\xa0\xeb\xc8\x09\x6c\xc5\xc4\xa2\x3a\xd6\xd2\x44\x61\x09\xf3\xf2\xb4\x0b\x3d\x0c\x47\xd3\x1e\xee\xa3\x84\x4e\x26\x0e\xf8\x25\x3a\x77\xe0\x10\x3c\xd0\x52\x28\x74\x2a\xe5\x0b\xd0\x6b\xf4\x03\xdf\x88\x2d\xd2\x34\x05\x82\xbd\x66\x22\xf4\x97\x58\xcc\xfd\x2c\x8f\x42\xe2\x10\x81\xed\x76\x14\x88\x87\x78\x32\x97\xee\xe0\xde\xad\xe8\x2e\xce\x55\x82\xb0\x4f\x65\x01\x73\x9d\x56\x1c\x15\xdb\x5a\xab\xc7\xc4\x06\xcb\x49\x00\x29\x70\x46\xd9\xed\xe9\xe3\xd9\x3c\x98\x2c\xfa\x63\x3e\xb7\x96\x3c\xaf\xe1\x97\xc2\x11\x30\x98\x72\x50\x8e\xf5\x37\xe5\x7e\x19\x13\x77\x02\x5f\xdc\xea\x28\x68\xad\xe0\x2a\x41\x47\x7f\xba\x79\x7d\x75\xb4\x83\x16\x4e\x53\x9b\x6c\xce\xe7\xff\x85\xfa\x09\x57\x17\x4b\xe6\x95\x0c\xe6\x54\xcc\xa5\x50\xa6\xcb\x87\x02\xc9\x70\xad\x86\x13\x58\x39\xfe\xe3\xcf\xe4\xcd\xdd\x3b\xc7\xdf\x27\xc9\xff\xa6\x77\xef\x7c\xff\xdd\xb1\xfd\xa9\xf5\x72\xa3\x6c\x8e\x9e\xa0\xaf\xfe\x6f\xf6\xff\xc9\xe3\xc7\x27\xb3\xb2\xd9\x97\x8b\x3c\xdb\x09\xaa\x31\x5d\x4e\xac\x20\xef\xba\x64\xb8\x23\x8a\xfe\xb9\x79\x8d\x1c\xc7\x25\x27\x63\xb4\x51\x7a\xc1\xfe\xc9\x37\xf9\xee\xc3\x71\xa0\x15\xf4\xeb\x7e\x34\xd9\x02\x45\x61\x93\x5f\xa2\x1f\xae\x08\xcb\x53\x40\x6b\xba\x5a\x23\x82\x55\x4a\x39\x66\xd4\x6c\x51\xb5\xa8\x56\x2e\x31\x1f\x6d\xc3\x88\xf8\x78\xe4\xa8\xa1\x37\x1d\xc3\x3c\x16\xb9\x59\x88\x9c\xa7\xd7\x94\xfb\xdf\x9a\x6d\x39\x87\xbb\x13\x7f\x7d\xd4\x99\x68\xaa\x84\x1c\xa6\x69\x88\x9c\x4b\x05\x4b\x7a\xf5\x4f\x51\xb4\x19\x0e\x58\x9f\x0c\x06\xd9\x47\x37\xbe\x7b\xe7\x50\xb4\x6b\x63\xa4\x95\x31\x9f\xfb\x15\x48\xcd\x4b\x42\xc3\xf3\xbb\x15\x3a\xb7\x8a\x7e\xee\xb4\x3f\x9f\xf7\xa0\x73\x71\x69\x6e\x98\x3e\x5c\xe6\xfb\xb1\x12\x39\x4f\xc5\x25\xf7\x5b\x9a\xf7\x40\xc0\x89\xed\xd8\xd9\xcc\x35\x4e\x33\xca\x6f\x60\x39\x7b\x89\x14\x0e\x74\xcc\x16\xd7\x0a\x8c\xda\x5e\x2f\xa8\x33\x5e\x03\x8a\x63\x76\x9d\xe1\xab\x6b\xa1\xe8\xca\xfa\xeb\x30\xfd\xe1\xf5\xf1\xec\xb9\xaf\x59\x2a\xdd\x5d\x15\xab\x88\x11\x61\x49\x43\xb7\xa3\x43\xd6\xbd\xfa\x96\xc1\x3f\x65\xc4\x6b\x14\xc7\x6b\xb7\xd6\x0a\x04\x29\x2c\x71\xce\x4c\x99\x08\xac\xc1\xf2\x64\x65\x5e\x20\x33\x4c\x07\xba\xd5\x48\x82\xe7\x4b\x6a\x29\x4f\x37\x58\x4d\x55\xce\xa7\xa1\x84\x34\x6d\x66\x6a\x61\x63\x83\x7d\xba\x33\x25\x38\x26\xe5\x69\xd2\x02\xb0\x02\x35\x37\xe2\x02\xf8\x8d\xb0\xb9\x91\xef\xbe\xdc\x07\xac\x4e\x1b\x7d\xab\x72\x21\x5c\xb7\x02\x1f\x90\x0e\x54\x28\xbe\xf3\xe2\x1c\xb4\x8e\x62\x23\x38\x6c\x17\xae\xc7\xd1\x87\xae\xa4\x51\xb6\x6c\xa7\xba\x4f\xa9\x87\xa7\x1f\x16\x6b\x5f\xfe\xb1\x2f\xd5\x69\xe5\x4a\xb5\xa9\x06\xc7\x89\xf5\x86\x24\x0f\x1e\xdc\x3f\x24\xa3\xb1\xbc\x34\xed\xa8\x48\xdb\xe2\x5a\x92\xd6\x66\xad\x9e\x27\x0f\xf1\x37\xc5\x92\x4e\x37\xb3\xa9\x2f\x16\xd8\xcc\xce\x57\x0c\xca\x4d\x7b\xb0\x41\xdd\xb1\x41\x72\x9a\x6e\xa8\x16\x3d\x49\x7b\xcd\x0c\x09\xf6\x9d\x3e\x5b\xe2\x67\x4b\x7c\x47\x4b\x9c\x16\xb6\x34\x6c\x92\xa1\xf4\xd5\x34\xc7\x9a\x35\x96\xed\x07\xec\x0e\x47\xaa\xb3\x2f\x9e\x97\x67\x8d\xce\xf2\x1b\xb2\x2d\xc1\xd1\xa1\xbb\x3a\x3f\xeb\x5d\x89\x4b\x69\x07\x3d\xb9\x4b\xfc\xb5\xdd\xb7\xed\x4d\x87\xf6\x6d\x16\xeb\xba\xbe\xad\x89\x59\xdb\x38\xcc\x80\xf6\xf3\x79\xc8\xa6\x76\x96\x7c\x75\x6f\xcc\xa4\xba\x6e\x76\xf8\x54\xeb\x37\x64\xfe\xc1\xbd\xf3\x90\xb8\x0e\x50\x61\x7b\x63\x7c\xd0\x1e\xfa\x16\xe8\x97\x3b\xe4\xbd\xe4\xcb\x9e\xa1\x00\xe7\x3c\xf7\x05\x96\x1f\x47\x1d\x32\xba\xf7\x6d\xf6\x80\x3c\x5e\x7e\xfb\xe8\xe1\xde\x43\xfb\x8f\x63\xc6\xc3\xf5\xcd\xe2\x6b\x15\xeb\x56\x8d\xeb\x26\x36\xcb\x70\x34\xdd\x7d\x3c\xf4\xf8\xe4\xf1\x89\x7f\x55\xc2\x08\x22\x58\x82\x5e\x3f\x3d\x9b\x20\xa4\x81\x01\x31\x42\xfd\xc7\x4a\xa5\xad\x61\x2c\xa5\x9e\x96\x6a\x7e\x56\x9e\x9f\x7f\x2a\x9a\xb6\x01\x84\x12\xac\x13\x34\xeb\xa8\x2f\xc3\x86\xac\x7f\x6e\x84\x92\xb1\xb3\x3f\x60\xfe\xe3\x24\xb0\x5f\x06\x06\x32\xc9\xb0\x09\x17\xbe\xea\xea\x73\x34\xda\x1f\x0d\x06\xc2\xf5\xc3\xf4\x69\x28\x9e\x3f\xe7\x7f\x39\x29\xfc\xee\x3f\x13\x48\x50\x4a\x35\x5e\xd4\xaf\x6e\x85\x8e\xe5\x2d\x81\x29\x75\x43\x12\xf4\x85\xbb\x03\x55\x5c\x26\x6b\x87\xe1\xf1\xd2\x3b\x48\x7e\x63\x25\xb8\x5f\x86\xcd\xef\xd5\xca\x42\x7c\x3d\x4b\x53\xab\xc6\xba\x12\x45\xe1\xfa\x57\x6c\x74\xba\x88\x15\x18\xe0\x56\xca\x4f\xbe\x59\x37\x7a\xf9\x74\x2f\xb6\x9b\x87\x27\x53\x30\xa4\x76\xca\x30\x6d\x9e\x93\x94\xc3\x68\xe6\x6e\x95\xa5\x82\x5c\x80\xb2\x73\xb2\xfd\x6a\x9d\x93\xcd\xbd\xf8\xdb\x78\xd6\xec\x7f\x96\x33\x76\x16\x3e\xff\x7c\xbe\x7c\x29\xcc\x99\x02\x0d\xbc\x4a\x12\x18\xdd\x00\x07\xad\xcf\x94\x58\x34\x2e\x07\xda\x10\xf7\x13\xb4\x2e\x4e\x86\x83\x91\x68\xba\x06\xcc\xcc\xba\x79\xf7\xbd\x15\x0b\x51\xf9\x71\x63\xe7\x04\xa5\x16\x51\x0b\x91\x94\xc2\x3d\xeb\x62\x41\xed\xa8\x8b\x5c\x8a\x82\x53\x7a\x03\xce\xed\xb8\xbd\x7c\x37\xce\xa6\x2b\xe0\xdb\x1c\xb4\x69\xdf\x32\x95\x79\x82\x66\x27\x59\x03\x98\x41\x26\xd4\x36\x41\xb3\x7b\x8f\x5e\xd0\xb2\x65\x23\x58\x9e\xc1\x0b\xbb\x05\x6c\xcc\x3d\xb3\x10\xff\xb1\x68\xcb\x16\x3a\x22\xf0\x76\x13\x79\x4c\x03\x28\x6a\xa6\x64\x5d\xbe\x83\xc3\x02\x9b\x18\x74\xe3\x28\xf0\xe5\x70\xf4\xac\x66\x51\xf3\x01\x52\x24\x40\xed\xfa\xde\x0e\x24\xbb\xe6\x13\xf5\xf0\xf9\x09\xac\x53\x1f\xe1\x1a\xa4\x8d\xc2\x06\x56\xe1\x9b\x03\x7f\xb5\xf7\x15\x10\x05\xd8\xc0\xde\x25\xea\x23\x5c\x2d\x88\xc8\x32\x5c\xbf\xf1\x1f\xa1\x78\xda\x26\x13\xa1\x88\x89\x55\xc4\x60\x03\xec\x09\xe5\x4b\x51\x6f\x71\x67\xd6\xc5\x17\x2a\x4f\x6c\x06\xd3\x6c\x75\x9b\xd9\xc8\x17\xee\x9f\xd8\x40\x98\x4c\xa7\x5d\x27\x4c\x1a\xc1\x2e\x2c\x2c\x97\x80\x37\x70\x29\xd4\x85\x2e\x46\x24\xb5\xa9\xa1\x77\x5f\x51\xe0\xaa\x7d\xcf\xbd\x23\x0f\x3f\x8f\x4b\x7f\x8f\xa8\x0e\x8a\xa2\xb7\x39\xed\x81\x1a\x45\x41\x3f\x99\x75\xe1\xfe\xd3\x93\x27\x0f\x3a\x2d\x5a\x5a\xd1\xb5\xc0\x41\x52\x4c\x10\xcc\xd6\x42\x9b\xe4\xd1\xc9\xa3\x93\xb0\xc8\xfd\x5d\xeb\x1b\xd0\x16\x9f\x14\xa1\x87\xad\x70\xd6\xd6\xe5\xbe\x65\xce\x92\xb9\xe9\x32\xf7\x51\x8b\xb3\x77\x01\x66\x34\xa3\x03\xcb\xef\xc9\xc0\x02\xfc\x70\x76\xaf\xb6\x00\xdf\x68\x0d\xbf\x5f\xc7\xa0\x81\xe4\x8a\x9a\xed\x53\xc1\x0d\x5c\x99\x66\x7a\x80\xd3\x5f\x38\xdb\xbe\x12\xc2\xfc\x48\x19\xf8\x9d\x45\xab\x58\x87\x90\xca\xf9\xa9\xfe\x55\x83\xf2\x6c\xcf\xf6\x2f\xc1\x93\x7f\x05\x00\x00\xff\xff\x68\x4c\xff\x54\x36\x44\x00\x00")

func flaggerYamlBytes() ([]byte, error) {
	return bindataRead(
		_flaggerYaml,
		"flagger.yaml",
	)
}

func flaggerYaml() (*asset, error) {
	bytes, err := flaggerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "flagger.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glooYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5b\x6f\xdb\x3a\x12\x7e\xd7\xaf\xe0\x7a\x1f\x0e\x70\x00\x39\x76\xb7\x97\x44\x6f\x69\x92\x53\x04\x9b\xa6\x86\x93\xf6\x55\xa0\xa9\x89\xcc\x2d\x45\xea\x90\x94\x13\x6f\x37\xfb\xdb\x17\x24\x75\xa1\x6e\x76\x92\xa6\x45\xd0\xb3\xea\x43\x4d\x72\x38\xc3\xf9\xe6\xc2\x19\x06\xe7\xf4\x0b\x48\x45\x05\x8f\x10\xce\x29\xdc\x69\xe0\x66\xa4\xa6\x5f\x0f\xd5\x94\x8a\x83\xcd\x7c\x05\x1a\xcf\x83\xaf\x94\x27\x11\x3a\x29\x94\x16\xd9\x12\x94\x28\x24\x81\x53\xb8\xa1\x9c\x6a\x2a\x78\x90\x81\xc6\x09\xd6\x38\x0a\x10\x62\x78\x05\x4c\x99\x5f\x08\xe1\x3c\x8f\x50\xca\x84\x08\x10\xe2\x38\x83\x08\xa5\x58\xc3\x2d\xde\xaa\x69\xf9\x63\xaa\x04\x13\x53\x2a\x02\x95\x03\x31\x9b\x52\x29\x8a\xbc\xa6\xab\x97\xdd\xfe\x92\xad\x3b\xcd\x07\x47\x62\x67\x18\x55\xfa\x9f\xfe\xec\x05\x55\xda\xae\xe4\xac\x90\x98\x35\x82\xed\xa4\x5a\x0b\xa9\x2f\x1b\x86\x21\x4a\x6f\xdd\x02\xe5\x69\xc1\xb0\xac\xe9\x03\x84\x14\x11\x39\x44\xc8\x92\xe7\x98\x40\x12\x20\xb4\xa9\x50\xdb\xcc\x83\x30\x0c\x83\x9f\x0f\x64\x2e\xc5\x1d\x05\x35\x35\x93\xa3\x20\xfa\x6b\x03\x08\x2e\xa4\xb8\xeb\xe2\x67\xe7\x7a\xe8\x95\xd2\x46\xc0\xcb\xef\x3a\xe0\xe5\x25\xe3\x97\x06\x1d\xb2\x3f\x22\xa4\x40\x6b\xca\x53\x55\xa3\x59\x4d\x7c\x17\x9c\x57\x0d\x57\x1f\xd1\x6a\xba\x07\xaa\xf2\xe9\xfb\xa8\x5a\xea\x97\x86\xa0\x83\xab\xc8\x95\x96\x80\x33\x0b\xcc\xf7\x81\xf6\xb9\x64\xf5\xc1\x90\x77\x90\x6b\xad\xf5\xe0\x6b\x1f\x62\x04\xc4\x22\xed\xb8\x66\x6b\xd7\x8b\x07\xf8\x79\xb0\x1d\x81\x75\x14\xd1\x51\x30\xd5\x08\x98\x2f\x16\xc7\x0d\x95\xba\xc0\x4c\x81\xdc\x50\x02\xcf\x71\xeb\x7c\x71\x1c\xaf\x1c\xc7\x0e\xb2\xed\xc5\x1e\xbe\x9d\xd3\x8c\xa0\xbc\xe9\xa2\xdc\xde\xf6\x04\xac\xe5\x0a\x93\x29\x2e\xf4\x5a\x48\xfa\x6f\x6c\x20\x6c\x00\xaf\xb0\x66\x85\xd2\x20\x97\x82\xc1\xa3\x32\xa9\x61\xdd\x5c\xee\x4c\x88\x50\x0a\x06\x61\x75\x7b\xca\x82\x19\xc5\x42\x63\x6e\x1b\xc5\x96\x55\x88\x26\x93\x00\x21\x59\x5a\xb6\x9c\xcb\x45\xa2\xec\x0f\x0f\x1f\x33\x20\x12\xb4\xfb\x0d\x3c\xc9\x05\xe5\xe5\x88\x08\x7e\x43\xd3\x0c\xdb\xd8\xdf\x80\x5c\x95\x7c\x7e\xfb\xfd\xb7\x87\x09\xe4\x15\x7e\x1d\x06\x29\x68\xfb\x3f\x73\xf6\x0b\xd1\x2d\xd6\x64\xdd\xe7\x39\xe4\xc2\x7d\x29\xc4\x7a\x71\x35\x99\xd4\x5e\x3c\x22\x94\x48\xc0\x1a\xfa\xc2\x3a\xb1\xde\x11\xe2\x5d\x25\x61\x2b\x8c\xc3\x7e\x9a\x0c\xbd\xdb\x3c\x1c\xf0\xc9\x7d\x50\xf6\x83\xa4\x73\x98\x3e\xcb\xd0\x2f\xbf\xba\xfc\xbf\xcb\x59\xdf\x53\x9e\x50\x9e\x3e\x87\xcf\xae\x1c\xab\xca\x77\x43\xbb\xa2\xb6\x4a\x43\x16\x18\x82\x25\xdc\x18\x9e\x15\x1a\x3b\x4e\x1a\x54\xc9\xc2\x8f\xaa\xf1\x20\x51\xc5\xea\x5f\x40\xb4\x8d\x93\xaa\x92\xb0\xd0\x1d\x13\x22\x0a\xae\xeb\xad\x09\xdc\xe0\x82\x55\x63\xeb\xba\x25\xbf\xf2\x98\x5d\x2c\x37\xf3\xa0\x02\xa5\xd2\xca\x96\x66\x21\xf0\x8d\xd8\x86\x2e\x82\xdc\x60\xba\xc5\x19\x8b\xd0\x7f\x2c\x4e\x5c\x24\xe0\xf0\x43\x88\x38\x1d\xfc\x8a\xd8\x7c\x34\x89\xd0\xe4\xdb\xb7\xe9\x42\x24\x26\x0f\xdd\xdf\x4f\x9b\x81\x3d\xd9\xfd\xfd\xa4\x24\xf5\x6d\xe3\xbe\xbf\x23\xbd\xa6\x0a\x31\xca\x01\x65\x85\xd2\x28\x33\x11\x86\xfe\x56\x13\x18\x7c\x5a\xfc\x4b\x96\xff\x6d\xa9\xe1\x04\x28\x8d\x35\x25\x71\xcb\x09\xab\xb4\x0c\x1c\xa4\x6a\xe4\x86\x4d\xf1\x9c\x81\x5e\x43\xa1\xe2\x8a\xaa\xa6\x41\x08\x27\x89\x04\xe5\x6d\xb3\x52\x04\xf9\x0a\x3a\x1e\x5c\x6b\xb6\xa0\xd9\xd4\xfe\xeb\x2c\xe7\x42\xea\x78\x83\x59\x01\x11\x3a\x9c\x1d\xce\xbd\xe5\x1b\xca\x34\xc8\x98\xac\x31\xe5\x1d\xb6\x61\xb9\xd8\x93\xd6\x28\xe2\x4c\xb7\xd6\x3a\x8f\x89\xe0\x1c\x88\xf1\xc2\x38\xc3\x1c\xa7\x2d\x95\xaa\xcf\x59\xbc\xcf\xcf\xad\x25\x40\x62\xbd\x35\x57\x0b\x2e\xb4\x18\x24\x32\x60\xc7\xb9\x84\x1b\x7a\xe7\xc3\x38\x48\x2b\x45\xa1\x21\xde\x25\x12\xf5\xed\x61\x37\x8d\x10\x97\x89\x25\x5e\x0b\xa5\x07\x40\xe9\x82\xe3\x71\x35\x3b\x46\xe9\x11\x4a\x44\xd6\x87\xbf\xcf\x76\xf2\xfb\x64\x07\x85\x3d\xf9\x5e\x1e\xd6\xd3\x77\x13\x99\xaf\x82\x78\x72\x90\x81\x96\x94\xa8\x5d\x92\xdd\xb7\x06\x9c\x0c\x3a\x4b\xff\x10\x0e\x9f\x49\x64\xe0\x11\xc9\x7e\xd6\x08\xc1\x1d\x26\x3a\x76\x87\x47\x1f\xce\xae\xf7\x6c\xb1\x58\x3c\x54\xcb\x58\xc2\xad\xa4\xda\x9c\xe8\xc0\xf8\x97\x3a\x68\x2c\xb7\xff\x6c\x75\x7e\xc2\x49\x46\x79\x6c\x43\xad\x9c\x1b\xdc\x6b\x83\x65\x34\xb0\xdc\xd7\x0e\x2f\xab\xcc\x30\x33\xd4\xc4\x14\xfa\x76\x1f\x04\xed\x9c\x59\xf3\x0f\xbd\xdc\x3f\xf5\x12\xf6\x54\x6d\xc8\xb4\x24\x9e\x32\x41\x30\x8b\x8e\x8e\xde\xbd\xab\x45\x61\xa6\x63\x1b\x71\x6e\xfb\x5d\xa2\x7a\xaa\x95\x61\x1f\x6b\x9a\x81\x28\x74\x84\xde\x4c\x67\xb3\x59\x13\x90\x4c\xe0\x24\xc6\x4a\xd1\x94\x67\xc0\xb5\xaf\x71\xc9\x2a\x7e\xda\xd9\x50\x53\x8e\xf9\x4c\x43\xc4\x56\xf1\xe0\x8a\x5f\xc1\xf5\x81\x1f\x49\xac\x68\x6f\xea\x6d\x6f\x7f\x80\x1a\x83\xfb\xfd\x0c\xdd\x52\xd3\xb8\xcb\xab\x38\x97\x42\x0b\x22\x58\x2c\x72\x5b\xbb\x59\x6b\x57\x24\x55\x85\xe5\xa7\xe0\x8a\xce\x13\xa6\x49\x1e\x7f\x05\xc8\x31\xa3\x1b\x68\x31\x70\x39\xf7\xea\x7a\x79\x7e\x72\x1d\x9f\x5e\x5e\x75\xbc\x66\x87\x63\xef\xb3\x7e\xc5\xf9\xf8\xfa\xfc\xa4\x71\x89\x55\x9c\x0b\x46\xc9\x36\x42\xcb\x4f\x9f\x2f\x4f\xe3\xe5\xa7\xf7\xe7\x97\x8f\xf7\x98\x9d\x01\xf7\x22\x9d\x63\xfe\xea\x9d\xbd\x9f\xe7\x7b\x7d\x60\x7e\x34\x9b\xcd\x5c\x38\x27\x5b\x8e\xb3\xa1\x02\x03\x9b\x70\xec\xdc\x6e\x38\xa7\xe5\x15\xfa\x61\xb9\x68\x20\x4f\x65\x4e\xe2\xaa\x20\xf6\xeb\x11\x9b\x61\x62\xb3\x1c\xa1\x6f\x4f\x0a\xc8\xca\x8d\xc8\xd0\x69\x12\xdf\x53\xd9\x1e\x0a\x6b\xcf\x5a\x39\x42\x40\xa9\x98\x89\x34\xce\xb1\x5e\x47\xe8\x20\x81\xcd\x01\x2f\x18\x0b\x46\x6c\x32\x6e\x89\x9d\xf8\xf7\x51\x2f\x6b\x67\x7b\xd2\x8f\x38\x7f\xfc\xeb\xf2\x50\x91\x4b\xb2\xe4\x15\x79\x75\x78\xf4\xf6\xf5\x50\x95\xdc\x2a\xbb\x1f\xd5\x4c\xb4\x44\x0e\x1f\x64\xbc\x5e\xaf\x9e\x1f\x0c\x06\x5e\x53\x1a\xd9\xac\x13\x54\xe8\x98\x9a\xd1\x0d\xca\x2c\x14\xa1\xeb\x93\x85\x9d\xd1\x58\xa6\xa0\x17\x25\x91\x25\xf3\x59\x28\x8f\xc7\xeb\xd7\xff\x78\x08\x13\x47\xa6\x80\x01\xd1\x42\x3e\x5c\x6f\xe7\xf4\x17\x02\x27\xef\x31\xc3\x9c\x80\x7c\x66\x9c\x5b\x76\x6e\x06\x8f\x41\xd5\x84\x99\x87\x48\x9d\xe7\xbb\x90\x3c\x40\x7b\x33\xec\x3f\x69\xe5\xaa\x69\x52\x4f\x21\x67\x62\x6b\x32\xe8\xa3\xf4\x4c\xa8\x22\x62\x03\xb2\xf1\xa5\xee\xcc\x0e\x8d\x25\xe4\x8c\x12\x6c\x22\xad\xa7\x86\xad\xdd\x2e\x3c\xe9\x5d\xf9\x43\x27\xd0\x90\xe5\x0c\x57\xa5\x5c\xb7\x91\xc3\x9c\x0b\x8d\x3b\x17\x5d\x53\xbb\x99\x9e\xbd\xcc\x1d\x65\x11\x3b\x46\x64\xcd\x31\x39\x9a\x1d\xcd\x27\x23\x24\x8a\x48\x6c\x1c\x6c\xa2\x65\x01\x15\x11\x6b\x69\xd3\xd7\x67\x48\x23\x84\x2a\xb0\x90\xbb\x3f\x35\xa6\xbc\x55\xaa\x01\xdf\xf4\x3b\xc6\xc5\xa7\xd3\xf8\xf2\xf8\xe3\xd9\xd5\xe2\xf8\xe4\xcc\xcb\x5e\x36\x71\xfd\x21\x45\xd6\xbe\x79\x6e\x28\xb0\xa4\x7c\x30\xe8\xcd\x2f\x2c\x26\x15\x98\xd3\xda\xa6\x3d\xa1\x57\xd7\xc7\xcb\xeb\xd8\xdc\xde\x57\xf1\xd5\xd9\xf2\xcb\xd9\xb2\x2b\xb9\x03\x08\x42\x34\xc3\x29\x44\xe8\xcf\x02\x6f\x2d\x6c\x82\x89\x90\x8a\x83\x1a\x81\x68\x36\x9d\xbf\xf5\xfa\x53\x4b\xbf\x28\x18\x5b\x94\x15\xc1\x31\xab\xff\x4a\x86\xd0\x90\x0b\xba\x4f\x01\x29\x24\xd5\xdb\x13\xc1\x35\xdc\xb5\xae\x6c\xcc\x98\xb8\x5d\x48\xba\xa1\x0c\x52\x38\x53\x04\x33\xeb\x23\x11\xba\xc1\x4c\xf9\xbd\x1d\xc1\x39\x5e\x51\x46\x35\xed\xf6\x4d\x89\x14\x79\xb7\x3c\x38\xbe\xb8\xf0\x66\x24\xe0\xe4\x13\x67\xdb\xa5\x10\xfa\x0f\xca\xc0\x45\x42\x84\x0c\x1c\x3e\x59\xc1\x8f\xd5\xa5\xe0\x86\x6c\x78\xf1\xb3\x32\xcd\xc3\x7c\x36\x9f\x0d\x3d\x52\x3f\x43\x44\x37\xef\x26\xad\xbb\xe1\x27\x45\x73\x23\xed\xd7\x88\x65\xff\x15\xea\xaf\x18\xc9\xa5\xfe\x4f\x8b\xe3\xf6\x13\xde\xff\xa3\xf8\x67\xd7\x79\xcf\x19\xd1\x4d\xe5\xf5\x33\xe3\xfa\x70\x76\xf8\x43\xe3\xba\xd6\x6a\x7f\x74\x63\x99\xb6\x5a\xa9\x30\x4c\xa8\xc2\x2b\x06\xe1\x5a\xe8\x50\x82\xd2\x58\x36\x8f\x7e\x2f\x27\x17\x54\x42\x9f\x5f\xde\xde\xdc\x61\x5c\xd2\x75\x45\xb7\x12\xe7\x39\xc8\xef\x4a\x23\x9e\xad\x10\xf2\xca\xed\x4a\xdd\xda\x68\xad\xfe\xa4\xcd\xaa\x6e\x74\x4a\x1e\xbd\xe6\x64\x98\x55\xd5\xcc\x74\x59\xa9\xbd\xbc\x7e\x70\xca\xc3\x49\xd2\xcd\x78\x97\x67\xd7\xf1\xfb\xf3\xcb\x53\x9b\xf8\xcf\x5b\x7e\xf6\x6c\x29\x72\x23\x58\x91\xc1\x47\x51\xf0\xb6\x09\x32\x33\xe3\x3c\xe5\x00\x34\x39\xb0\xc6\xef\x21\xe7\x37\xca\x81\xcf\xd0\x8b\x36\x52\xb5\xe3\x51\x6f\xfb\x78\xd7\x1d\xec\x90\xf3\x63\xb2\xf4\xe3\xbb\xc4\xe7\xc9\xc9\x6e\xe2\x17\x29\xb1\xaa\xa9\xbf\x64\x7d\x65\x20\x78\x5a\x56\xf4\x91\xdc\x97\x0c\x3b\x4f\xe9\x9d\xf7\x89\xda\xa4\x03\x09\xac\xf7\x0c\xe9\x26\xff\x2c\xa0\xf7\x47\x31\x92\x17\x11\x7a\x33\x9b\x65\xad\xd9\x0c\x32\x21\xb7\x11\x7a\xf5\xe6\xed\x47\xfa\x8b\x97\x82\xff\x0b\x00\x00\xff\xff\xc3\x6d\xcf\x2c\xe1\x2a\x00\x00")

func glooYamlBytes() ([]byte, error) {
	return bindataRead(
		_glooYaml,
		"gloo.yaml",
	)
}

func glooYaml() (*asset, error) {
	bytes, err := glooYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gloo.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"coredns.yaml": corednsYaml,
	"flagger.yaml": flaggerYaml,
	"gloo.yaml":    glooYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"coredns.yaml": &bintree{corednsYaml, map[string]*bintree{}},
	"flagger.yaml": &bintree{flaggerYaml, map[string]*bintree{}},
	"gloo.yaml":    &bintree{glooYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
